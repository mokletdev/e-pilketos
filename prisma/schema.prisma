generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum role {
  SISWA
  GURU
  ADMIN
}

model User_Auth {
  id         String    @id @default(uuid()) @map("id") @db.Char(36)
  password   String?
  last_login DateTime?
  user_Id    String    @unique
  user       User      @relation(references: [id], fields: [user_Id], onDelete: Cascade)
}

model User {
  id                  String               @id @default(uuid()) @map("user_id") @db.Char(36)
  email               String               @unique
  name                String
  user_pic            String?
  role                role
  Candidates          Candidates?
  User_vote           User_vote?
  vote_session_access vote_session_access?
  User_Auth           User_Auth?
}

model Candidates {
  id            String     @id @default(uuid()) @map("id") @db.Char(36)
  img           String
  name          String
  kelas         String?
  visi          String
  misi          String
  pengalaman    String
  motto         String
  progja        String
  video_profile String
  user_Id       String     @unique
  user          User       @relation(fields: [user_Id], references: [id])
  User_vote     User_vote?
}

model Vote_session {
  id                     String                  @id @default(uuid()) @map("id") @db.Char(36)
  title                  String
  openedAt               DateTime
  closeAt                DateTime
  isPublic               Boolean
  max_vote               Int
  User_vote              User_vote?
  Vote_session_candidate Vote_session_candidate?
  vote_session_access    vote_session_access?
}

model User_vote {
  id              String       @id @default(uuid()) @map("id") @db.Char(36)
  vote_session_id String       @unique
  candidate_id    String       @unique
  user_Id         String       @unique
  vote_session    Vote_session @relation(fields: [vote_session_id], references: [id])
  candidate       Candidates   @relation(fields: [candidate_id], references: [id])
  user            User         @relation(fields: [user_Id], references: [id])
}

model Vote_session_candidate {
  id              String       @id @default(uuid()) @map("id") @db.Char(36)
  vote_session_id String       @unique
  candidate_id    String       @unique
  vote_session    Vote_session @relation(fields: [vote_session_id], references: [id])
  number          Int
}

model vote_session_access {
  id              String       @id @default(uuid()) @map("id") @db.Char(36)
  vote_session_id String       @unique
  user_Id         String       @unique
  vote_session    Vote_session @relation(fields: [vote_session_id], references: [id])
  user            User         @relation(fields: [user_Id], references: [id])
}
