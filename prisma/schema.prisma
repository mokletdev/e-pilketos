generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User_Auth {
  id         String    @id @default(uuid()) @map("id") @db.Char(36)
  password   String?
  last_login DateTime?
  user_Id    String    @unique
  user       User      @relation(references: [id], fields: [user_Id], onDelete: Cascade)
}

model User {
  id                  String                @id @default(uuid()) @map("user_id") @db.Char(36)
  email               String                @unique
  name                String
  user_pic            String?
  kelas               String?
  role                Role                  @default(SISWA)
  User_vote           User_vote[]
  vote_session_access vote_session_access[]
  User_Auth           User_Auth?
  Candidates          Candidates[]
}

model Candidates {
  id                     String                   @id @default(uuid()) @map("id") @db.Char(36)
  img                    String
  name                   String
  visi                   String                   @db.LongText()
  misi                   String                   @db.LongText()
  pengalaman             Pengalaman[]
  kandidat_kelas         String?
  motto                  String
  progja                 String                   @db.LongText()
  video_profile          String?
  user                   User?                    @relation(fields: [userId], references: [id])
  User_vote              User_vote[]
  userId                 String?                  @db.Char(36)
  Vote_session_candidate Vote_session_candidate[]
}

model Pengalaman {
  id           String      @id @default(uuid()) @map("id") @db.Char(36)
  desc         String
  Candidates   Candidates? @relation(fields: [candidatesId], references: [id])
  candidatesId String?     @db.Char(36)
}

model Vote_session {
  id                     String                   @id @default(uuid()) @map("id") @db.Char(36)
  title                  String
  openedAt               DateTime
  closeAt                DateTime
  isPublic               Boolean
  max_vote               Int
  spreadsheetId          String?
  User_vote              User_vote[]
  vote_session_candidate Vote_session_candidate[]
  vote_session_access    vote_session_access[]
}

model User_vote {
  id              String       @id @default(uuid()) @map("id") @db.Char(36)
  vote_session_id String
  candidate_id    String
  user_Id         String
  timestamp       DateTime     @default(now())
  vote_session    Vote_session @relation(fields: [vote_session_id], references: [id])
  candidate       Candidates   @relation(fields: [candidate_id], references: [id])
  user            User         @relation(fields: [user_Id], references: [id])
}

model Vote_session_candidate {
  id                String       @id @default(uuid()) @map("id") @db.Char(36)
  vote_session_id   String
  candidate_id      String
  vote_session      Vote_session @relation(fields: [vote_session_id], references: [id])
  candidate         Candidates   @relation(fields: [candidate_id], references: [id])
  candidates_number Int
}

model vote_session_access {
  id              String       @id @default(uuid()) @map("id") @db.Char(36)
  vote_session_id String
  user_Id         String
  vote_session    Vote_session @relation(fields: [vote_session_id], references: [id])
  user            User         @relation(fields: [user_Id], references: [id])
}

enum Role {
  ADMIN
  GURU
  SISWA
  OSIS
  MPK
}
